name: Build - Test - Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Build the Docker image
      run: DOCKER_BUILDKIT=0 docker build . --file src/Dockerfile --tag ghcr.io/${{ github.repository }}:${{ github.run_number }}
    
    - name: Extract test results
      run: |
        id=$(docker images --filter "label=test=localhost" -q | head -1)
        docker create --name testcontainer $id
        docker cp testcontainer:/testresults/ .
        docker rm testcontainer
    
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: testresults/*.xml
    
    - name: Copy coverage
      run: |
        cov_file=$(find testresults -name coverage.cobertura.xml | grep -v "testresults/_")
        mkdir -p coverage
        cp $cov_file coverage/

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.0.2
      with:
        filename: coverage/coverage.cobertura.xml
        badge: true
        format: 'markdown'
        output: 'both'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: GitHub Container Registry Login
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Push the container
      run: |
        docker push ghcr.io/${{ github.repository }}:${{ github.run_number }}

  deploy_dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - uses: actions/checkout@v2

    - uses: ./.github/workflows/composite/deploy-steps.yml
      with:
        resource_group: vslive-demo-dev
        aci_name: vslive-demo-app-dev
        image: ghcr.io/${{ github.repository }}:${{ github.run_number }}
        azure_creds: ${{ secrets.AZURE_CREDENTIALS }}